<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.dao.CommentVOMapper">

  <resultMap id="BaseResultMap" type="com.study.domain.CommentVO">
    <id column="COMMENT_ID" jdbcType="INTEGER" property="commentId" />
    <id column="ARTICLE_ID" jdbcType="INTEGER" property="articleId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="COMMENT_TIME" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="COMMENT_PEOPLE_ID" jdbcType="VARCHAR" property="commentPeopleId" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.study.domain.CommentVO">
    <result column="COMMENT_CONTENT" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>

  <sql id="Base_Column_List">
    COMMENT_ID, ARTICLE_ID, NAME, COMMENT_TIME, COMMENT_PEOPLE_ID
  </sql>

  <sql id="Blob_Column_List">
    COMMENT_CONTENT
  </sql>

  <select id="selectByPrimaryKey" parameterType="com.study.domain.CommentVOKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
      and ARTICLE_ID = #{articleId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="com.study.domain.CommentVOKey">
  delete from comment
  where COMMENT_ID = #{commentId,jdbcType=INTEGER}
  and ARTICLE_ID = #{articleId,jdbcType=INTEGER}
</delete>

  <insert id="insert" parameterType="com.study.domain.CommentVO">
    insert into comment (COMMENT_ID, ARTICLE_ID, NAME, 
      COMMENT_TIME, COMMENT_PEOPLE_ID, COMMENT_CONTENT
      )
    values (#{commentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{commentTime,jdbcType=TIMESTAMP}, #{commentPeopleId,jdbcType=VARCHAR}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.study.domain.CommentVO">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        COMMENT_ID,
      </if>
      <if test="articleId != null">
        ARTICLE_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="commentTime != null">
        COMMENT_TIME,
      </if>
      <if test="commentPeopleId != null">
        COMMENT_PEOPLE_ID,
      </if>
      <if test="commentContent != null">
        COMMENT_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentPeopleId != null">
        #{commentPeopleId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.study.domain.CommentVO">
    update comment
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        COMMENT_TIME = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentPeopleId != null">
        COMMENT_PEOPLE_ID = #{commentPeopleId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        COMMENT_CONTENT = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
      and ARTICLE_ID = #{articleId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.study.domain.CommentVO">
    update comment
    set NAME = #{name,jdbcType=VARCHAR},
      COMMENT_TIME = #{commentTime,jdbcType=TIMESTAMP},
      COMMENT_PEOPLE_ID = #{commentPeopleId,jdbcType=VARCHAR},
      COMMENT_CONTENT = #{commentContent,jdbcType=LONGVARCHAR}
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
      and ARTICLE_ID = #{articleId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.study.domain.CommentVO">
    update comment
    set NAME = #{name,jdbcType=VARCHAR},
      COMMENT_TIME = #{commentTime,jdbcType=TIMESTAMP},
      COMMENT_PEOPLE_ID = #{commentPeopleId,jdbcType=VARCHAR}
    where COMMENT_ID = #{commentId,jdbcType=INTEGER}
      and ARTICLE_ID = #{articleId,jdbcType=INTEGER}
  </update>

  <select id="getComments" parameterType="Map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
      WHERE ARTICLE_ID = #{articleId,jdbcType=INTEGER}
    ORDER  BY COMMENT_TIME ASC
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

</mapper>