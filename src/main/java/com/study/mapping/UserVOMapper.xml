<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.dao.UserVOMapper">

  <resultMap id="BaseResultMap" type="com.study.domain.UserVO">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="REGIST_DATE" jdbcType="DATE" property="registDate" />
    <result column="LEVEL" jdbcType="VARCHAR" property="level" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="ALIAS" jdbcType="VARCHAR" property="alias" />
    <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="PHONE_NUMBER" jdbcType="INTEGER" property="phoneNumber" />
    <result column="INTEGRAL" jdbcType="VARCHAR" property="integral" />
    <result column="ABILITY_LEVEL" jdbcType="VARCHAR" property="abilityLevel" />
    <result column="NUMBER_FAILURE" jdbcType="INTEGER" property="numberFailure" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
  </resultMap>

  <sql id="Base_Column_List">
    USER_ID, PASSWORD, REGIST_DATE, LEVEL, NAME, ALIAS, AGE, PHONE_NUMBER, INTEGRAL, 
    ABILITY_LEVEL, NUMBER_FAILURE, EMAIL
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.study.domain.UserVO">
    insert into user (USER_ID, PASSWORD, REGIST_DATE, 
      LEVEL, NAME, ALIAS, 
      AGE, PHONE_NUMBER, INTEGRAL, 
      ABILITY_LEVEL, NUMBER_FAILURE, EMAIL
      )
    values (#{userId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{registDate,jdbcType=DATE}, 
      #{level,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{phoneNumber,jdbcType=INTEGER}, #{integral,jdbcType=VARCHAR}, 
      #{abilityLevel,jdbcType=VARCHAR}, #{numberFailure,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.study.domain.UserVO">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="registDate != null">
        REGIST_DATE,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="alias != null">
        ALIAS,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="phoneNumber != null">
        PHONE_NUMBER,
      </if>
      <if test="integral != null">
        INTEGRAL,
      </if>
      <if test="abilityLevel != null">
        ABILITY_LEVEL,
      </if>
      <if test="numberFailure != null">
        NUMBER_FAILURE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="registDate != null">
        #{registDate,jdbcType=DATE},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=VARCHAR},
      </if>
      <if test="abilityLevel != null">
        #{abilityLevel,jdbcType=VARCHAR},
      </if>
      <if test="numberFailure != null">
        #{numberFailure,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.study.domain.UserVO">
    update user
    <set>
      <if test="password != null">
      PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="registDate != null">
        REGIST_DATE = #{registDate,jdbcType=DATE},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        ALIAS = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        PHONE_NUMBER = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        INTEGRAL = #{integral,jdbcType=VARCHAR},
      </if>
      <if test="abilityLevel != null">
        ABILITY_LEVEL = #{abilityLevel,jdbcType=VARCHAR},
      </if>
      <if test="numberFailure != null">
        NUMBER_FAILURE = #{numberFailure,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.study.domain.UserVO">
    update user
    set PASSWORD = #{password,jdbcType=VARCHAR},
      REGIST_DATE = #{registDate,jdbcType=DATE},
      LEVEL = #{level,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ALIAS = #{alias,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      PHONE_NUMBER = #{phoneNumber,jdbcType=INTEGER},
      INTEGRAL = #{integral,jdbcType=VARCHAR},
      ABILITY_LEVEL = #{abilityLevel,jdbcType=VARCHAR},
      NUMBER_FAILURE = #{numberFailure,jdbcType=INTEGER},
      EMAIL = #{email,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>